// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// room visibility
enum RoomVisibility {
  PUBLIC
  PRIVATE
  PROTECTED
}

// permissions
enum Privileges {
  ADMIN
  MEMBER
}

// model User {
//   id Int @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   email String @unique
//   hash String

//   firstname String?
//   lastname String?
//   username String?
// }
model User {
  // initial user data
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // personal user data
  email String @unique
  firstname String
  lastname String
  username String
  image String

  // verification user authentification
  isVerified Boolean @default(false)

  // Game user data
  gamewins Int @default(0)
  gameplays Int @default(0)
  gamefails Int @default(0)
  gamepoints Int @default(0)
  
  games Game[]

  // Chat user data
  chatRooms UserChatRoom[]
  sentMessages Message[] @relation(name: "SentMessages")
  receivedMessages Message[] @relation(name: "ReceivedMessages")
}

model Game {
  gameId String @id @map("game-id")
  userPlayerId Int
  userOpponnentId Int
  createdAt DateTime @default(now())
  score Int
  status String
  dateStart DateTime
  user User @relation(fields: [userPlayerId], references: [id])
}

// begin chat models
model ChatRoom {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name String @unique
  passwordHash String?
  visibility RoomVisibility @default(PUBLIC)
  users UserChatRoom[]
}

model UserChatRoom {
  // Foreign keys
  userId Int
  chatRoomId Int
  user User @relation(fields: [userId], references: [id])
  chatRoom ChatRoom @relation(fields: [chatRoomId], references: [id])
  privaligeUser Privileges @default(MEMBER)
  msgRoom MessageRoom[] @relation(name: "SentMessages")
  @@id([userId, chatRoomId])
}

// model messageRoom for chat in room
model MessageRoom {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  text String
  senderUserId    Int 
  senderChatRoomId    Int
  sender    UserChatRoom @relation(name: "SentMessages", fields: [senderUserId, senderChatRoomId], references: [userId, chatRoomId])
}

model Message {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  text String
  sender User @relation(name: "SentMessages", fields: [senderId], references: [id])
  receiver User @relation(name: "ReceivedMessages", fields: [receiverId], references: [id])
  senderId Int 
  receiverId Int
}
// end chat models
