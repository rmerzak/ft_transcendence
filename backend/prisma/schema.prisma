// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
// enum UserStatus {
//   ONLINE
//   OFFLINE
//   INGAME
// }
model User {
  // initial user data
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // personal user data
  email String @unique
  firstname String
  lastname String
  username String @unique
  image String

  // verification user authentification
  isVerified Boolean @default(false)

  // user status online , offline ,in game
  //status UserStatus @default("offline")
  // user 2fa
  twoFactorSecret String
  twoFactorEnabled Boolean @default(false)

  // Game user data
  gamewins Int @default(0)
  gameplays Int @default(0)
  gamefails Int @default(0)
  gamepoints Int @default(0)
  
  games Game[]
  sentFriendRequests Friendship[] @relation("Sender")
  receivedFriendRequests Friendship[] @relation("Receiver")
  receivedNotification Notification[] @relation("Receiver")
  sendNotification Notification[] @relation("Sender")
}

model Game {
  gameId String @id @map("game-id")
  userPlayerId Int
  userOpponnentId Int
  createdAt DateTime @default(now())
  score Int
  status String
  dateStart DateTime
  user User @relation(fields: [userPlayerId], references: [id])

}

enum FriendshipStatus {
  PENDING
  ACCEPTED
  DECLINED
}
enum Blocker {
  SENDER
  RECEIVER
}
model Friendship {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt

  status FriendshipStatus

  sender User @relation("Sender", fields: [senderId], references: [id])
  senderId Int
  receiver User @relation("Receiver", fields: [receiverId], references: [id])
  receiverId Int

  block Boolean @default(false)
  blockBy Blocker?
  @@unique([senderId, receiverId])
}

enum RequestType {
  FRIENDSHIP
  GAME
}
model Notification {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  type String
  content String
  RequestId Int
  RequestType RequestType
  vue Boolean @default(false)
  userId Int
  senderId Int
  Receiver User @relation( "Receiver",fields: [userId], references: [id])
  sender User @relation( "Sender",fields: [senderId], references: [id])
}