// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model User {
//   id Int @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   email String @unique
//   hash String

//   firstname String?
//   lastname String?
//   username String?
// }
model User {
  // initial user data
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // personal user data
  email String @unique
  firstname String
  lastname String
  username String
  image String

  // verification user authentification
  isVerified Boolean @default(false)

  // Game user data
  gamewins Int @default(0)
  gameplays Int @default(0)
  gamefails Int @default(0)
  gamepoints Int @default(0)
  
  games Game[]

  // Chat user data]
  // messages Message[] @relation(name: "users")
}

model Game {
  gameId String @id @map("game-id")
  userPlayerId Int
  userOpponnentId Int
  createdAt DateTime @default(now())
  score Int
  status String
  dateStart DateTime
  user User @relation(fields: [userPlayerId], references: [id])
}

// model ChatRoom {
//   id Int @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   name String
//   password String?
//   isPrivate Boolean @default(false)
//   message Message[] @relation(name: "rooms")
// }


// model Message {
//   id Int @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   content String
//   imageUrl String?
//   user User @relation(name: "users", fields: [userId], references: [id], onDelete: Cascade)
//   userId Int
//   chatRoom ChatRoom @relation(name: "rooms", fields: [chatRoomId], references: [id], onDelete: Cascade)
//   chatRoomId Int
// }

// model UserChatRoom {
//   id Int @id @default(autoincrement())
//   userId Int
//   chatRoomId Int

//   // Foreign keys
//   user User @relation(fields: [userId], references: [id])
//   chatRoom ChatRoom @relation(fields: [chatRoomId], references: [id])

//   // ... other fields ...
// }